from typing import List

from src.model.interfaceToMitre.conversionType.stixConversionType._AbstractObjectWithAttackPatternRetriever import \
    _AbstractObjectWithAttackPatternsRetriever
from src.model.domain.mySTIXObject.MyToolMalware import MyToolMalware
from src.model.Singleton import singleton
from src.model.interfaceToMitre.mitreData.MitreData import MITRE_ATTACK_ENTERPRISE_DATA, \
    MITRE_ATTACK_MOBILE_DATA, MITRE_ATTACK_ICS_DATA, MITRE_ATLAS_DATA

from stix2.v20 import Tool, Malware


class _ToolAndMalware(Tool, Malware):
    pass


@singleton
class ToolsMalwareRetriever(_AbstractObjectWithAttackPatternsRetriever):

    def __init__(self):
        super().__init__(MyToolMalware, _ToolAndMalware)

    def _get_all(self):
        return (MITRE_ATTACK_ENTERPRISE_DATA.get_software()
                + MITRE_ATTACK_MOBILE_DATA.get_software()
                + MITRE_ATTACK_ICS_DATA.get_software())

    def get_attack_patterns_relationship_using_objects_id(self, object_stix_id: str) -> List:
        return (MITRE_ATTACK_ENTERPRISE_DATA.get_techniques_used_by_software(object_stix_id)
                + MITRE_ATTACK_MOBILE_DATA.get_techniques_used_by_software(object_stix_id)
                + MITRE_ATTACK_ICS_DATA.get_techniques_used_by_software(object_stix_id)
                + MITRE_ATLAS_DATA.get_techniques_used_by_software(object_stix_id))
