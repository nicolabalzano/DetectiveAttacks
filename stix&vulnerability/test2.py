from src.dataProvider.container.mySTIXContainer.AttackPatternsContainer import AttackPatternsContainer

# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1743').name)
# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1506').name)
# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1506').name)
# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1500').name)
# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1506').name)
# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1190').name)
# print(AttackPatternsContainer().get_object_from_data_by_mitre_id('T1193').name)

import re
def __check_phases_for_mapping(phases: str) -> bool:
        """
        This method check if the phases are correct

        Args:
            phases (str): phases of the attack pattern

        Returns:
            bool:  True if the phases are correct, otherwise False
        """
        PHASES_TO_DISCARD = ['reconnaissance']
        
        for phase in phases:
            
            if phase.phase_name.lower() in PHASES_TO_DISCARD:
                return False
        return True
    
def __isSubTechnique(at_id: str) -> bool:
    if at_id.startswith('T'):
        if at_id.count('.') == 0:
            return True
        return False
    elif at_id.startswith('AML'):
        if at_id.count('.') == 1:
            return True
        return False
    return False

def __modify_text(text: str) -> str:

    text = re.sub(r'\(.*?\)', '', text.split('\n')[0], flags=re.DOTALL)
    text = re.sub(r'\n\n', '\n', text, flags=re.DOTALL)
    text = re.sub(r'\<.*?\>', '', text, flags=re.DOTALL)
    text = re.sub(r'\[', ' ', text, flags=re.DOTALL)
    text = re.sub(r'\]', ' ', text, flags=re.DOTALL)
    text = re.sub(r'\  ', ' ', text, flags=re.DOTALL)
    text = re.sub(r'\ \.', '.', text, flags=re.DOTALL)
    text = re.sub(r'\ \,', ',', text, flags=re.DOTALL)

    return text
    

counter = 0
for at in [at for at in AttackPatternsContainer().get_tuple_data() 
                if 'enterprise-attack' in at.x_mitre_domains 
                and __check_phases_for_mapping(at.kill_chain_phases) 
                and __isSubTechnique(at.x_mitre_id)]:
    counter +=1
    print(str(counter) + '----> ID:' + at.x_mitre_id + ", name:" + at.name + ', description: ' + __modify_text(at.description) + ';')
