from src.dataProvider.container.vulnerabilityContainer.MitreToCVEContainer import MitreToCVEContainer
import src.dataProvider.interfaceToVulnerability.CVE as CVE

CVE_ID = 'CVE-2019-11510'
cve_desc = CVE.get_CVE_by_id(CVE_ID)['descriptions'][0]['value']
related_ats = MitreToCVEContainer().get_related_at_from_request(cve_desc)
print(CVE_ID)
print("    ", cve_desc)
print("    ", related_ats)

mapping_know = MitreToCVEContainer().get_data()['mapping_objects']
counter = 0
prev_id = None
for dict_ in mapping_know:
    if prev_id == dict_['capability_id']:
        continue
    if counter >= 20:
        print("DONE..." + str(counter) + " CVEs tested")
        break
    counter += 1
    cve_id = dict_['capability_id']
    print(counter, '--> ', cve_id)
    prev_id = cve_id
    cve_desc = CVE.get_CVE_by_id(cve_id)['descriptions'][0]['value']
    print("    ", cve_desc)
    
    ats_rel = MitreToCVEContainer().get_related_ats_by_vuln_id_in_mapped(cve_id)
    ats_ids = []
    for rel, ats in ats_rel.items():
        ats_ids += [at.x_mitre_id for at in ats]
    print("    ", ats_ids)
    
    