
# from src.dataProvider.container.mySTIXContainer.AttackPatternsContainer import AttackPatternsContainer
import tiktoken

"""
messages = []

for at in [at for at in AttackPatternsContainer().get_tuple_data() if 'enterprise-attack' in at.x_mitre_domains]:
            json_data = {
                "role": "system",
                "content": "You are a chatbot specializing in the context of cybersecurity, the attack pattern known with the id \'" 
                    + at.x_mitre_id + "\' is: " + at.name + ' .'
            }

            messages.append(json_data)
"""

"""
message = "You are a cybersecurity chatbot. You are an expert in identifying and explaining various cybersecurity attack patterns. Here is a list of attack patterns along with their IDs that you are familiar with:"

for at in [at for at in AttackPatternsContainer().get_tuple_data() if 'enterprise-attack' in at.x_mitre_domains]:
    message += (at.x_mitre_id + ":" + at.name + '\n')
    
json_data = [{
            "role": "system",
            "content": message}]

#print(messages)
encoding = tiktoken.encoding_for_model('gpt-3.5-turbo')

prompt_text = ''
for message in json_data:
    prompt_text += message['role'] + ': ' + message['content'] + '\n'

tokens = encoding.encode(prompt_text)
num_tokens = len(tokens)

print(f'The prompt contains {num_tokens} tokens.')

"""

from src.dataProvider.container.vulnerabilityContainer.MitreToCVEContainer import MitreToCVEContainer
from src.dataProvider.container.mySTIXContainer.AssetsContainer import AssetsContainer
import pprint
target_id = 'CVE-2020-3306'
ats_id = [at.x_mitre_id for ats in MitreToCVEContainer().get_related_ats_by_vuln_id_in_mapped(target_id).values() for at in ats]
print(ats_id)

vuln_ids_assets = {}
for at_id in ats_id:
    vuln_ids = MitreToCVEContainer().get_vuln_id_by_attack_pattern_mitre_id(at_id).keys()
    for vuln_id in vuln_ids:
        if vuln_id not in vuln_ids_assets:
            vuln_ids_assets[vuln_id] = []
        # search at ids related to the vuln id to add the assets
        ats_id = [at.x_mitre_id for ats in MitreToCVEContainer().get_related_ats_by_vuln_id_in_mapped(target_id).values() for at in ats]
        for at_id_of_vuln in ats_id:
            vuln_ids_assets[vuln_id].extend([asset.x_mitre_id for asset in AssetsContainer().get_objects_related_by_attack_pattern_mitre_id('T0830').keys()])
    

pprint.pprint(vuln_ids_assets)
