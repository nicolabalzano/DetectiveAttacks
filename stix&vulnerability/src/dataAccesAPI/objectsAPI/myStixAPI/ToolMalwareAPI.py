from src.dataAccesAPI.objectsAPI.util import format_list_of_string, format_external_references, remove_empty_values, \
    format_related_attack_patterns
from src.dataProvider.container import ToolsMalwareContainer


def get_tool_malware_from_tw_rel_dict(dict_tw_rel):
    """
    Get tool malware from dict of {tool_malware: relationship}

    :param dict_tw_rel: [{tool_malware: relationship}]
    :return: list
    """
    if dict_tw_rel:
        list_tw = []
        for tool_malware, rel in dict_tw_rel.items():
            dict_tw = {}
            dict_tw['ID'] = tool_malware.x_mitre_id
            dict_tw['Name'] = tool_malware.name
            dict_tw['Type'] = tool_malware.type
            dict_tw['Description'] = tool_malware.description
            dict_tw['Labels'] = format_list_of_string(tool_malware.labels)
            dict_tw['Purpose'] = format_list_of_string(rel.relationship_type)
            dict_tw['Suggestion for this case'] = format_list_of_string(rel.description)
            dict_tw['Domains'] = format_list_of_string(tool_malware.x_mitre_domains)
            dict_tw['Platforms'] = format_list_of_string(tool_malware.x_mitre_platforms)
            dict_tw['Aliases'] = format_list_of_string(tool_malware.x_mitre_aliases)
            dict_tw['External references'] = format_external_references(tool_malware.external_references)
            dict_tw = remove_empty_values(dict_tw)
            list_tw.append(dict_tw)
        return list_tw
    return []


def get_tool_malware_from_mitre_id(mitre_id: str):
    """
    Get tool malware from mitre id

    :param mitre_id: str
    :return: list
    """
    tw = ToolsMalwareContainer().get_object_from_data_by_mitre_id(mitre_id)
    dict_tw = {}
    dict_tw['ID'] = tw.x_mitre_id
    dict_tw['Name'] = tw.name
    dict_tw['Type'] = tw.type
    dict_tw['Description'] = tw.description
    dict_tw['Domains'] = format_list_of_string(tw.x_mitre_domains)
    dict_tw['Platforms'] = format_list_of_string(tw.x_mitre_platforms)
    dict_tw['Aliases'] = format_list_of_string(tw.x_mitre_aliases)
    dict_tw['x_mitre_version'] = tw.x_mitre_version
    dict_tw['External references'] = format_external_references(tw.external_references)
    dict_tw['Revoked'] = tw.revoked
    dict_tw['Realetd ATT&CK and ATLAS techniques'] = format_related_attack_patterns(tw.attack_patterns_and_relationship)

    return remove_empty_values(dict_tw)
